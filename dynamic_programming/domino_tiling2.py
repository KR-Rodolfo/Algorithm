# 도미노 타일링 2
'''
    - 2 X 1 (또는 1 X 2) 모양 또는 ㄱ자 모양 도미노 여러개를 이용해 2 X n 타일을 빈틈없이 메우는 경우의 수는?
        - 두 가지 모양의 도미노를 회전하여 사용할 수 있고, 충분히 많은 도미노가 제공된다고 가정하자.
    - 입력값: n (타일의 열의 개수)
    - 출력값: 타일을 메울 수 있는 경우의 수
'''

def domino_2(n):
    if n == 0:
        return 0
    A = [0] * (n + 1)
    B = [0] * (n + 1)
    A[1] = 1
    A[2] = 2
    B[1] = 0
    B[2] = 1
    for i in range(3, n + 1):
        # 직사각형 형태인 타일을 채우는 경우의 수를 기록하기 위한 table -> A 
        # 1행의 열이 n개이고 2행의 열이 n-1개인 형태를 가진 타일을 채우는 경우의 수를 기록하기 위한 table -> B
        A[n] = A[n - 1] + A[n - 2] + 2*B[n - 1]
        B[n] = A[n - 2] + B[n - 1]
        # DP_table이 2개가 필요하다!
    return A[n]

n = int(input())
print(domino_2(n))